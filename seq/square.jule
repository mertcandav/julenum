// Copyright 2025 mertcandav.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/math/big"

struct seqSquare {
	mut n: big::Int
}

impl Seq for seqSquare {
	fn Reset(*self) {
		self.n = big::Int.FromI64(1)
	}

	fn Next(*self): big::Int {
		result := self.n.Mul(self.n)             // n²
		self.n = self.n.Add(big::Int.FromI64(1)) // n++
		ret result
	}
}

// Returns a sequence representing square numbers from 1², then 2², 3², and so on.
fn Square(): Seq {
	mut seq := new(seqSquare)
	seq.Reset()
	ret seq
}