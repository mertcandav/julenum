// Copyright 2025 mertcandav.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/math/big"

struct seqPowerOfTwo {
	mut z: big::Int
}

impl Seq for seqPowerOfTwo {
	fn Reset(*self) {
		self.z = big::Int.FromI64(0)
	}

	fn Next(*self): big::Int {
		if self.z.BitLen() == 0 { // 2⁰ = 1
			self.z = big::Int.FromI64(1)
		} else {
			self.z = self.z.Lsh(1)
		}
		ret self.z
	}
}

// Returns a sequence representing powers of two starting from 2⁰ = 1,
// then 2¹ = 2, 2² = 4, and so on.
fn PowerOfTwo(): Seq {
	ret new(seqPowerOfTwo)
}