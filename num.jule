// Copyright 2025 mertcandav.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/math"

// Reports whether two values a and b are considered equal, allowing NaNs.
fn Equal(a: f64, b: f64): bool {
	ret a == b || math::IsNaN(a) && math::IsNaN(b)
}

// Reports whether two values a and b are considered same.
// It returns true if both are NaN (Not a Number), or if they are exactly equal
// including matching their sign bits (distinguishing +0 and -0).
// If both are NaN, if guarantees payload equality for the quiet-NaNs.
fn Same(a: f64, b: f64): bool {
	match {
	| math::IsNaN(a) && math::IsNaN(b):
		// Inline implementation of the NaNPayload for a and b.
		ret math::F64bits(a)&^nanMask == math::F64bits(b)&^nanMask
	| a == b:
		ret math::Signbit(a) == math::Signbit(b)
	}
	ret false
}