import{_ as a,c as n,o as l,ah as e}from"./chunks/framework.CvtUal3J.js";const d=JSON.parse('{"title":"julenum/num/dualquat","description":"","frontmatter":{},"headers":[],"relativePath":"api/num/dualquat.md","filePath":"api/num/dualquat.md"}'),p={name:"api/num/dualquat.md"};function o(r,s,t,c,F,i){return l(),n("div",null,s[0]||(s[0]=[e(`<h1 id="julenum-num-dualquat" tabindex="-1">julenum/num/dualquat <a class="header-anchor" href="#julenum-num-dualquat" aria-label="Permalink to “julenum/num/dualquat”">​</a></h1><p>Package for dual-quaternion numbers.</p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to “Index”">​</a></h2><p><a href="#quat">struct Quat</a><br>     <a href="#powreal">fn PowReal(mut *self, &amp;q: *Quat, p: f64)</a><br>     <a href="#pow">fn Pow(mut *self, &amp;q: *Quat, &amp;p: *Quat)</a><br>     <a href="#sqrt">fn Sqrt(mut *self, &amp;q: *Quat)</a><br>     <a href="#exp">fn Exp(mut *self, &amp;q: *Quat)</a><br>     <a href="#log">fn Log(mut *self, &amp;q: *Quat)</a><br>     <a href="#zero">fn Zero(*self): bool</a><br>     <a href="#add">fn Add(mut *self, &amp;x: *Quat, &amp;y: *Quat)</a><br>     <a href="#sub">fn Sub(mut *self, &amp;x: *Quat, &amp;y: *Quat)</a><br>     <a href="#mul">fn Mul(mut *self, &amp;x: *Quat, &amp;y: *Quat)</a><br>     <a href="#scale">fn Scale(mut *self, &amp;q: *Quat, k: f64)</a><br>     <a href="#inv">fn Inv(mut *self, &amp;q: *Quat)</a><br>     <a href="#abs">fn Abs(*self): dual::Dual</a><br>     <a href="#conj">fn Conj(mut *self, &amp;q: *Quat)</a><br>     <a href="#conjy">fn ConjY(mut *self, &amp;q: *Quat)</a><br>     <a href="#conjquat">fn ConjQuat(mut *self, &amp;q: *Quat)</a></p><h2 id="quat" tabindex="-1">Quat <a class="header-anchor" href="#quat" aria-label="Permalink to “Quat”">​</a></h2><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">struct</span><span style="color:#F6F6F4;"> Quat {</span></span>
<span class="line"><span style="color:#F6F6F4;">	X</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> quat</span><span style="color:#F286C4;">::</span><span style="color:#F6F6F4;">Quat</span></span>
<span class="line"><span style="color:#F6F6F4;">	Y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> quat</span><span style="color:#F286C4;">::</span><span style="color:#F6F6F4;">Quat</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Dual quaternion with floating-point precision.</p><h3 id="powreal" tabindex="-1">PowReal <a class="header-anchor" href="#powreal" aria-label="Permalink to “PowReal”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">PowReal</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat, p</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">f64</span><span style="color:#F6F6F4;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to q**p, the base-q exponential of p.</p><p>Special cases are (in order):<br></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#f6f6f4;">PowReal(NaN+xϵ, ±0) = 1+NaNϵ for any q</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q, ±0) = 1 for any q</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(1+xϵ, p) = 1+xyϵ for any p</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q, 1) = q for any q</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(NaN+xϵ, p) = NaN+NaNϵ</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q, NaN) = NaN+NaNϵ</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(±0, p) = ±Inf for p an odd integer &lt; 0</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(±0, -Inf) = +Inf</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(±0, +Inf) = +0</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(±0, p) = +Inf for finite p &lt; 0 and not an odd integer</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(±0, p) = ±0 for p an odd integer &gt; 0</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(±0, p) = +0 for finite p &gt; 0 and not an odd integer</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(-1, ±Inf) = 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q+0ϵ, +Inf) = +Inf+NaNϵ for |q| &gt; 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q+yϵ, +Inf) = +Inf for |q| &gt; 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q, -Inf) = +0+NaNϵ for |q| &gt; 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q, +Inf) = +0+NaNϵ for |q| &lt; 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q+0ϵ, -Inf) = +Inf+NaNϵ for |q| &lt; 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(q, -Inf) = +Inf-Infϵ for |q| &lt; 1</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(+Inf, p) = +Inf for p &gt; 0</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(+Inf, p) = +0 for p &lt; 0</span></span>
<span class="line"><span style="color:#f6f6f4;">PowReal(-Inf, p) = Pow(-0, -p)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="pow" tabindex="-1">Pow <a class="header-anchor" href="#pow" aria-label="Permalink to “Pow”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Pow</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">p</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the product q**p, the base-q exponential of p.</p><h3 id="sqrt" tabindex="-1">Sqrt <a class="header-anchor" href="#sqrt" aria-label="Permalink to “Sqrt”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Sqrt</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the square root of q</p><p>Special cases are:<br></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#f6f6f4;">Sqrt(+Inf) = +Inf</span></span>
<span class="line"><span style="color:#f6f6f4;">Sqrt(±0) = (±0+Infϵ)</span></span>
<span class="line"><span style="color:#f6f6f4;">Sqrt(x &lt; 0) = NaN</span></span>
<span class="line"><span style="color:#f6f6f4;">Sqrt(NaN) = NaN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="exp" tabindex="-1">Exp <a class="header-anchor" href="#exp" aria-label="Permalink to “Exp”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Exp</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to e**q, the base-e exponential of q.</p><p>Special cases are:<br></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#f6f6f4;">Exp(+Inf) = +Inf</span></span>
<span class="line"><span style="color:#f6f6f4;">Exp(NaN) = NaN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Very large values overflow to 0 or +Inf. Very small values underflow to 1.</p><h3 id="log" tabindex="-1">Log <a class="header-anchor" href="#log" aria-label="Permalink to “Log”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Log</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the natural logarithm of q.</p><p>Special cases are:<br></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#f6f6f4;">Log(+Inf) = (+Inf+0ϵ)</span></span>
<span class="line"><span style="color:#f6f6f4;">Log(0) = (-Inf±Infϵ)</span></span>
<span class="line"><span style="color:#f6f6f4;">Log(x &lt; 0) = NaN</span></span>
<span class="line"><span style="color:#f6f6f4;">Log(NaN) = NaN</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="zero" tabindex="-1">Zero <a class="header-anchor" href="#zero" aria-label="Permalink to “Zero”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Zero</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">bool</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Reports whether all fields of dual quaternion are zero.</p><h3 id="add" tabindex="-1">Add <a class="header-anchor" href="#add" aria-label="Permalink to “Add”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Add</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the sum x+y.</p><h3 id="sub" tabindex="-1">Sub <a class="header-anchor" href="#sub" aria-label="Permalink to “Sub”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Sub</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the difference x-y.</p><h3 id="mul" tabindex="-1">Mul <a class="header-anchor" href="#mul" aria-label="Permalink to “Mul”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Mul</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">x</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">y</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the product x*y.</p><h3 id="scale" tabindex="-1">Scale <a class="header-anchor" href="#scale" aria-label="Permalink to “Scale”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Scale</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat, k</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">f64</span><span style="color:#F6F6F4;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to q scaled by k.</p><h3 id="inv" tabindex="-1">Inv <a class="header-anchor" href="#inv" aria-label="Permalink to “Inv”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Inv</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to inverse of q.</p><h3 id="abs" tabindex="-1">Abs <a class="header-anchor" href="#abs" aria-label="Permalink to “Abs”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Abs</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> dual</span><span style="color:#F286C4;">::</span><span style="color:#F6F6F4;">Dual</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Returns absolute value of dual quaternion.</p><h3 id="conj" tabindex="-1">Conj <a class="header-anchor" href="#conj" aria-label="Permalink to “Conj”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">Conj</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the dual quaternion conjugate of q₁+q₂ϵ, q̅₁-q̅₂ϵ.</p><h3 id="conjy" tabindex="-1">ConjY <a class="header-anchor" href="#conjy" aria-label="Permalink to “ConjY”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">ConjY</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the dual conjugate of q₁+q₂ϵ, q₁-q₂ϵ.</p><h3 id="conjquat" tabindex="-1">ConjQuat <a class="header-anchor" href="#conjquat" aria-label="Permalink to “ConjQuat”">​</a></h3><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki dracula-soft" style="background-color:#0000000;" tabindex="0"><code><span class="line"><span style="color:#F286C4;">fn</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;">ConjQuat</span><span style="color:#F6F6F4;">(</span><span style="color:#F286C4;">mut</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*self</span><span style="color:#F6F6F4;">, </span><span style="color:#F286C4;">&amp;</span><span style="color:#F6F6F4;">q</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">*</span><span style="color:#F6F6F4;">Quat)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sets self to the quaternion conjugate of q₁+q₂ϵ, q̅₁+q̅₂ϵ.</p>`,61)]))}const y=a(p,[["render",o]]);export{d as __pageData,y as default};
